services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hakka-podcast-backend
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - CORS_ORIGINS=http://localhost:3000,http://localhost
      - DEBUG=true
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hakka-podcast-frontend
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - NODE_ENV=production

  # Development services (optional)
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hakka-podcast-backend-dev
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - CORS_ORIGINS=http://localhost:3000,http://localhost:5173
      - DEBUG=true
    ports:
      - "8001:8000"
    volumes:
      - ./backend:/app
    command: ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    restart: unless-stopped
    profiles:
      - dev

  frontend-dev:
    image: node:18-alpine
    container_name: hakka-podcast-frontend-dev
    working_dir: /app
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    environment:
      - NODE_ENV=development
    depends_on:
      - backend-dev
    restart: unless-stopped
    profiles:
      - dev

networks:
  default:
    name: hakka-podcast-network